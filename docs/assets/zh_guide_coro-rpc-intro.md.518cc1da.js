import{_ as s,c as n,o as a,a as l}from"./app.3b6e8018.js";const p="/yalantinglibs/assets/max_qps.2ac9fa43.png",o="/yalantinglibs/assets/pingpong_qps.ce276867.png",e="/yalantinglibs/assets/pingpong_time.3684bb20.png",c="/yalantinglibs/assets/long_tail_qps.1ada3499.png",t="/yalantinglibs/assets/long_tail_time.24fbb959.png",_=JSON.parse('{"title":"coro_rpc\u7B80\u4ECB","description":"","frontmatter":{},"headers":[{"level":2,"title":"rpc_server\u7AEF","slug":"rpc-server\u7AEF","link":"#rpc-server\u7AEF","children":[]},{"level":2,"title":"rpc\u51FD\u6570\u652F\u6301\u4EFB\u610F\u53C2\u6570","slug":"rpc\u51FD\u6570\u652F\u6301\u4EFB\u610F\u53C2\u6570","link":"#rpc\u51FD\u6570\u652F\u6301\u4EFB\u610F\u53C2\u6570","children":[]},{"level":2,"title":"rpc\u6613\u7528\u6027\u6BD4\u8F83","slug":"rpc\u6613\u7528\u6027\u6BD4\u8F83","link":"#rpc\u6613\u7528\u6027\u6BD4\u8F83","children":[]},{"level":2,"title":"\u5F02\u6B65\u7F16\u7A0B\u6A21\u578B\u6BD4\u8F83","slug":"\u5F02\u6B65\u7F16\u7A0B\u6A21\u578B\u6BD4\u8F83","link":"#\u5F02\u6B65\u7F16\u7A0B\u6A21\u578B\u6BD4\u8F83","children":[]},{"level":2,"title":"\u540C\u65F6\u652F\u6301\u5B9E\u65F6\u4EFB\u52A1\u548C\u5EF6\u65F6\u4EFB\u52A1","slug":"\u540C\u65F6\u652F\u6301\u5B9E\u65F6\u4EFB\u52A1\u548C\u5EF6\u65F6\u4EFB\u52A1","link":"#\u540C\u65F6\u652F\u6301\u5B9E\u65F6\u4EFB\u52A1\u548C\u5EF6\u65F6\u4EFB\u52A1","children":[]},{"level":2,"title":"\u670D\u52A1\u7AEF\u540C\u65F6\u652F\u6301\u534F\u7A0B\u548C\u5F02\u6B65\u56DE\u8C03","slug":"\u670D\u52A1\u7AEF\u540C\u65F6\u652F\u6301\u534F\u7A0B\u548C\u5F02\u6B65\u56DE\u8C03","link":"#\u670D\u52A1\u7AEF\u540C\u65F6\u652F\u6301\u534F\u7A0B\u548C\u5F02\u6B65\u56DE\u8C03","children":[]},{"level":2,"title":"\u6D4B\u8BD5\u73AF\u5883","slug":"\u6D4B\u8BD5\u73AF\u5883","link":"#\u6D4B\u8BD5\u73AF\u5883","children":[]},{"level":2,"title":"\u6D4B\u8BD5case","slug":"\u6D4B\u8BD5case","link":"#\u6D4B\u8BD5case","children":[{"level":3,"title":"\u6781\u9650qps\u6D4B\u8BD5","slug":"\u6781\u9650qps\u6D4B\u8BD5","link":"#\u6781\u9650qps\u6D4B\u8BD5","children":[]},{"level":3,"title":"ping-pong\u6D4B\u8BD5","slug":"ping-pong\u6D4B\u8BD5","link":"#ping-pong\u6D4B\u8BD5","children":[]},{"level":3,"title":"\u957F\u5C3E\u6D4B\u8BD5","slug":"\u957F\u5C3E\u6D4B\u8BD5","link":"#\u957F\u5C3E\u6D4B\u8BD5","children":[]}]},{"level":2,"title":"benchmark\u5907\u6CE8","slug":"benchmark\u5907\u6CE8","link":"#benchmark\u5907\u6CE8","children":[]}],"relativePath":"zh/guide/coro-rpc-intro.md","lastUpdated":null}'),r={name:"zh/guide/coro-rpc-intro.md"},F=l(`<h1 id="coro-rpc\u7B80\u4ECB" tabindex="-1">coro_rpc\u7B80\u4ECB <a class="header-anchor" href="#coro-rpc\u7B80\u4ECB" aria-hidden="true">#</a></h1><p>coro_rpc\u662F\u7528C++20\u5F00\u53D1\u7684\u57FA\u4E8E\u65E0\u6808\u534F\u7A0B\u548C\u7F16\u8BD1\u671F\u53CD\u5C04\u7684\u9AD8\u6027\u80FD\u7684rpc\u5E93\uFF0C\u5728\u5355\u673A\u4E0Aecho\u6D4B\u8BD5qps\u8FBE\u52302000\u4E07(\u8BE6\u60C5\u89C1benchmark\u90E8\u5206) \uFF0C\u6027\u80FD\u8FDC\u9AD8\u4E8Egrpc\u548Cbrpc\u7B49rpc\u5E93\u3002\u7136\u800C\u9AD8\u6027\u80FD\u4E0D\u662F\u5B83\u7684\u4E3B\u8981\u7279\u8272\uFF0Ccoro_rpc\u7684\u4E3B\u8981\u7279\u8272\u662F\u6613\u7528\u6027\uFF0C\u514D\u5B89\u88C5\uFF0C\u5305\u542B\u5934\u6587\u4EF6\u5C31\u53EF\u4EE5\u7528\uFF0C\u51E0\u884C\u4EE3\u7801\u5C31\u53EF\u4EE5\u5B8C\u6210\u4E00\u4E2Arpc\u670D\u52A1\u5668\u548C\u5BA2\u6237\u7AEF\u3002</p><p>coro_rpc\u7684\u8BBE\u8BA1\u7406\u5FF5\u662F\uFF1A\u4EE5\u6613\u7528\u6027\u4E3A\u6838\u5FC3\uFF0C\u56DE\u5F52rpc\u672C\u8D28\uFF0C\u8BA9\u7528\u6237\u4E13\u6CE8\u4E8E\u4E1A\u52A1\u903B\u8F91\u800C\u4E0D\u662Frpc\u6846\u67B6\u7EC6\u8282\uFF0C\u51E0\u884C\u4EE3\u7801\u5C31\u53EF\u4EE5\u5B8C\u6210rpc\u5F00\u53D1\u3002 rpc\u7684\u672C\u8D28\u662F\u4EC0\u4E48\uFF1Frpc\u7684\u672C\u8D28\u5C31\u662F\u4E00\u4E2A\u8FDC\u7A0B\u51FD\u6570\uFF0C\u9664\u4E86rpc\u5E95\u5C42\u7684\u7F51\u7EDCIO\u4E4B\u5916\uFF0C\u5176\u5B83\u7684\u5C31\u548C\u666E\u901A\u51FD\u6570\u4E00\u6837\u3002\u7528\u6237\u4E0D\u9700\u8981\u5173\u6CE8rpc\u5E95\u5C42\u7684\u7F51\u7EDCIO\u3001\u8DEF\u7531\u3001\u5E8F\u5217\u5316\u7B49\u7EC6\u8282\uFF0C\u7528\u6237\u53EA\u9700\u8981\u4E13\u6CE8\u4E8Erpc\u51FD\u6570\u7684\u4E1A\u52A1\u903B\u8F91\u5373\u53EF\uFF0C\u8FD9\u5C31\u662Fcoro_rpc\u7684\u8BBE\u8BA1\u7406\u5FF5, \u6B63\u662F\u57FA\u4E8E\u8FD9\u4E00\u8BBE\u8BA1\u7406\u5FF5\uFF0Ccoro_rpc\u63D0\u4F9B\u4E86\u975E\u5E38\u7B80\u5355\u6613\u7528\u7684API\u7ED9\u7528\u6237\u4F7F\u7528\u3002\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u6765\u770B\u770Bcoro_rpc\u7684\u6613\u7528\u6027\u5982\u4F55\u3002</p><h1 id="coro-rpc\u7684\u6613\u7528\u6027" tabindex="-1">coro_rpc\u7684\u6613\u7528\u6027 <a class="header-anchor" href="#coro-rpc\u7684\u6613\u7528\u6027" aria-hidden="true">#</a></h1><h2 id="rpc-server\u7AEF" tabindex="-1">rpc_server\u7AEF <a class="header-anchor" href="#rpc-server\u7AEF" aria-hidden="true">#</a></h2><p>1.\u5B9A\u4E49rpc\u51FD\u6570</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// rpc_service.hpp</span></span>
<span class="line"><span style="color:#C792EA;">inline</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>2.\u6CE8\u518Crpc\u51FD\u6570\u548C\u542F\u52A8server</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rpc_service.hpp</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">coro_rpc/coro_rpc_server.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">  // \u521D\u59CB\u5316\u670D\u52A1\u5668</span></span>
<span class="line"><span style="color:#A6ACCD;">  coro_rpc_server </span><span style="color:#82AAFF;">server</span><span style="color:#89DDFF;">(</span><span style="color:#676E95;">/*thread_num =*/</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;"> /*port =*/</span><span style="color:#F78C6C;">9000</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">register_handler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">echo</span><span style="color:#89DDFF;">&gt;();</span><span style="color:#676E95;"> // \u6CE8\u518Crpc\u51FD\u6570</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;"> // \u542F\u52A8server\u5E76\u963B\u585E\u7B49\u5F85</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u5BF9\u4E8Erpc\u670D\u52A1\u7AEF\u6765\u8BF4\uFF0C\u7528\u6237\u53EA\u9700\u8981\u5B9A\u4E49rpc\u51FD\u6570\u518D\u542F\u52A8server\u5373\u53EF\uFF0C\u4E0D\u9700\u8981\u5173\u6CE8\u5176\u5B83\u7EC6\u8282\uFF0C5\uFF0C6\u884C\u4EE3\u7801\u5C31\u53EF\u4EE5\u63D0\u4F9B\u4E00\u4E2Arpc\u670D\u52A1\u4E86\uFF0C\u662F\u4E0D\u662F\u5F88\u7B80\u5355\uFF01\u518D\u6765\u770B\u770Bclient\u662F\u600E\u4E48\u8C03\u7528hello\u8FD9\u4E2Arpc\u670D\u52A1\u7684\u3002 rpc_client\u7AEF</p><ol><li>\u8FDE\u63A5\u670D\u52A1\u7AEF</li><li>rpc\u8C03\u7528</li></ol><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rpc_service.hpp</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">coro_rpc/coro_rpc_client.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Lazy</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_client</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  coro_rpc_client client</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">co_await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;"> /*port =*/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">9000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">co_await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">echo</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello coro_rpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> //\u4F20\u53C2\u6570\u8C03\u7528rpc\u51FD\u6570</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> //will print &quot;hello coro_rpc&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">syncAwait</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">test_client</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>client\u8C03\u7528rpc\u51FD\u6570\u4E5F\u540C\u6837\u7B80\u5355\uFF0C5\uFF0C6\u884C\u4EE3\u7801\u5C31\u53EF\u4EE5\u5B9E\u73B0rpc\u8C03\u7528\u4E86\u3002 \u5C31\u50CF\u8C03\u7528\u672C\u5730\u51FD\u6570\u4E00\u6837\u8C03\u7528\u8FDC\u7A0Brpc\u51FD\u6570\uFF0C\u5728call\u91CC\u9762\u8F93\u5165\u51FD\u6570\u540D\u5B57\u548C\u53C2\u6570\u5C31\u53EF\u4EE5\u5B9E\u73B0\u8FDC\u7A0B\u8C03\u7528\u4E86\uFF0C\u975E\u5E38\u7B80\u5355\u3002</p><p>\u76F8\u4FE1\u4E0A\u9762\u7684\u8FD9\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u5DF2\u7ECF\u5145\u5206\u5C55\u793A\u4E86coro_rpc\u7684\u6613\u7528\u6027\u548C\u7279\u70B9\u4E86\uFF0C\u4E5F\u4F53\u73B0\u4E86rpc\u7684\u672C\u8D28\uFF0C\u5373\u7528\u6237\u53EF\u4EE5\u50CF\u8C03\u7528\u672C\u5730\u51FD\u6570\u90A3\u6837\u8C03\u7528\u8FDC\u7A0B\u51FD\u6570\uFF0C\u7528\u6237\u53EA\u9700\u8981\u5173\u6CE8rpc\u51FD\u6570\u7684\u4E1A\u52A1\u903B\u8F91\u5373\u53EF\u3002</p><p>coro_rpc\u7684\u63A5\u53E3\u6613\u7528\u6027\u8FD8\u4F53\u73B0\u5728rpc\u51FD\u6570\u51E0\u4E4E\u6CA1\u6709\u4EFB\u4F55\u9650\u5236\uFF0C\u4F60\u53EF\u4EE5\u5B9A\u4E49\u4EFB\u610F\u4E2A\u6570\u548C\u4EFB\u610F\u7C7B\u578B\u53C2\u6570\u7684rpc\u51FD\u6570, \u53C2\u6570\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u7531rpc\u5E93\u81EA\u52A8\u5B8C\u6210\uFF0C\u7528\u6237\u65E0\u9700\u5173\u5FC3\u3002</p><h2 id="rpc\u51FD\u6570\u652F\u6301\u4EFB\u610F\u53C2\u6570" tabindex="-1">rpc\u51FD\u6570\u652F\u6301\u4EFB\u610F\u53C2\u6570 <a class="header-anchor" href="#rpc\u51FD\u6570\u652F\u6301\u4EFB\u610F\u53C2\u6570" aria-hidden="true">#</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// rpc_service.h</span></span>
<span class="line"><span style="color:#676E95;">// \u5BA2\u6237\u7AEF\u53EA\u9700\u8981\u5305\u542B\u8FD9\u4E2A\u5934\u6587\u4EF6\u5373\u53EF\uFF0C\u65E0\u9700\u628Arpc\u7684\u5B9A\u4E49\u66B4\u9732\u7ED9\u5BA2\u6237\u7AEF\u3002</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(){};</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_value</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">){</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">person</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#FFCB6B;">person</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_person</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">person</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">dummy</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> str</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// rpc_service.cpp</span></span>
<span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rpc_service.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_value</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">){</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">person</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_person</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">person</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  p</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> p</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>server\u7AEF</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rpc_service.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">coro_rpc/coro_rpc_server.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  coro_rpc_server </span><span style="color:#82AAFF;">server</span><span style="color:#89DDFF;">(</span><span style="color:#676E95;">/*thread_num =*/</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;"> /*port =*/</span><span style="color:#F78C6C;">9000</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">register_handler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> get_value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> get_person</span><span style="color:#89DDFF;">&gt;();</span><span style="color:#676E95;">//\u6CE8\u518C\u4EFB\u610F\u53C2\u6570\u7C7B\u578B\u7684\u666E\u901A\u51FD\u6570</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  dummy d</span><span style="color:#89DDFF;">{};</span></span>
<span class="line"><span style="color:#A6ACCD;">  server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">register_handler</span><span style="color:#89DDFF;">&lt;&amp;</span><span style="color:#FFCB6B;">dummy</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">echo</span><span style="color:#89DDFF;">&gt;(&amp;</span><span style="color:#A6ACCD;">d</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> //\u6CE8\u518C\u6210\u5458\u51FD\u6570</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;"> // \u542F\u52A8server</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>client\u7AEF</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;"># include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rpc_service.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;"># include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">coro_rpc/coro_rpc_client.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Lazy</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_client</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  coro_rpc_client client</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">co_await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;"> /*port =*/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">9000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">  //RPC\u8C03\u7528</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">co_await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">co_await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">get_value</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  person p</span><span style="color:#89DDFF;">{};</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">co_await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">get_person</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;"> /*id =*/</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">co_await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;&amp;</span><span style="color:#FFCB6B;">dummy</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">echo</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello coro_rpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> //will print &quot;hello coro_rpc&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">syncAwait</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">test_client</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u91CC\u9762get_person\u51FD\u6570\u7684\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u90FD\u662F\u7ED3\u6784\u4F53\uFF0C\u901A\u8FC7\u7F16\u8BD1\u671F\u53CD\u5C04\u7684\u5E8F\u5217\u5316\u5E93<a href="https://alibaba.github.io/yalantinglibs/zh/guide/struct-pack-intro.html" target="_blank" rel="noreferrer">struct_pack</a>\u5B9E\u73B0\u81EA\u52A8\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\uFF0C\u7528\u6237\u65E0\u611F\u77E5\uFF0C\u7701\u5FC3\u7701\u529B\u3002</p><h1 id="\u548Cgrpc\u3001brpc\u6BD4\u8F83\u6613\u7528\u6027" tabindex="-1">\u548Cgrpc\u3001brpc\u6BD4\u8F83\u6613\u7528\u6027 <a class="header-anchor" href="#\u548Cgrpc\u3001brpc\u6BD4\u8F83\u6613\u7528\u6027" aria-hidden="true">#</a></h1><h2 id="rpc\u6613\u7528\u6027\u6BD4\u8F83" tabindex="-1">rpc\u6613\u7528\u6027\u6BD4\u8F83 <a class="header-anchor" href="#rpc\u6613\u7528\u6027\u6BD4\u8F83" aria-hidden="true">#</a></h2><table><thead><tr><th>RPC</th><th>\u662F\u5426\u9700\u8981\u5B9A\u4E49DSL</th><th>\u662F\u5426\u652F\u6301\u534F\u7A0B</th><th>hello world\u4F8B\u5B50\u4EE3\u7801\u884C\u6570</th><th>\u4F9D\u8D56\u5E93</th><th>\u662F\u5426header only</th></tr></thead><tbody><tr><td>grpc</td><td>Yes</td><td>No</td><td>70+ <a href="https://github.com/grpc/grpc/tree/master/examples/cpp/helloworld" target="_blank" rel="noreferrer">helloworld</a></td><td>16</td><td>No</td></tr><tr><td>brpc</td><td>Yes</td><td>No</td><td>40+ <a href="https://github.com/apache/incubator-brpc/tree/master/example/asynchronous_echo_c%2B%2B" target="_blank" rel="noreferrer">helloworld</a></td><td>6</td><td>No</td></tr><tr><td>coro_rpc</td><td>No</td><td>Yes</td><td>9</td><td>3</td><td>Yes</td></tr></tbody></table><h2 id="\u5F02\u6B65\u7F16\u7A0B\u6A21\u578B\u6BD4\u8F83" tabindex="-1">\u5F02\u6B65\u7F16\u7A0B\u6A21\u578B\u6BD4\u8F83 <a class="header-anchor" href="#\u5F02\u6B65\u7F16\u7A0B\u6A21\u578B\u6BD4\u8F83" aria-hidden="true">#</a></h2><p>\u5F02\u6B65\u56DE\u8C03 vs \u534F\u7A0B grpc\u5F02\u6B65\u56DE\u8C03</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">//&lt;https://github.com/grpc/grpc/blob/master/examples/cpp/helloworld/greeter_callback_client.cc&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SayHello</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">    // Data we are sending to the server.</span></span>
<span class="line"><span style="color:#A6ACCD;">    HelloRequest request</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_name</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    // Container for the data we expect from the server.</span></span>
<span class="line"><span style="color:#A6ACCD;">    HelloReply reply</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    // Context for the client. It could be used to convey extra information to</span></span>
<span class="line"><span style="color:#676E95;">    // the server and/or tweak certain RPC behaviors.</span></span>
<span class="line"><span style="color:#A6ACCD;">    ClientContext context</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    // The actual RPC.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">mutex mu</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">condition_variable cv</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> done </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#A6ACCD;">    Status status</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    stub_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">async</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">SayHello</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">reply</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                             </span><span style="color:#89DDFF;">[&amp;</span><span style="color:#A6ACCD;">mu</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">cv</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">done</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">](</span><span style="color:#FFCB6B;">Status</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                               status </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">move</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                               </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">lock_guard</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">mutex</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">lock</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">mu</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                               done </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#A6ACCD;">                               cv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">notify_one</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                             </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">unique_lock</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">mutex</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">lock</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">mu</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">done</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">cv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">wait</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    // Act upon its status.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ok</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">reply</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">message</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error_code</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">status</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error_message</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">RPC failed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">brpc\u5F02\u6B65\u56DE\u8C03</span></span>
<span class="line"><span style="color:#676E95;">// &lt;https://github.com/apache/incubator-brpc/blob/master/example/asynchronous_echo_c%2B%2B/client.cpp&gt;</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HandleEchoResponse</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">brpc</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Controller</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;">cntl</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">example</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">EchoResponse</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">    // std::unique_ptr makes sure cntl/response will be deleted before returning.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">unique_ptr</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">brpc</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">Controller</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cntl_guard</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cntl</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">unique_ptr</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">example</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">EchoResponse</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">response_guard</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cntl</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">Failed</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">LOG</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">WARNING</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Fail to send EchoRequest, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cntl</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">ErrorText</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">LOG</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">INFO</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Received response from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> cntl</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">remote_side</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">message</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> (attached=</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> cntl</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">response_attachment</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> latency=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> cntl</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">latency_us</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">us</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#FFCB6B;">example</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">EchoService_Stub </span><span style="color:#82AAFF;">stub</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">channel</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    // Send a request and wait for the response every 1 second.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> log_id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#FFCB6B;">brpc</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">IsAskedToQuit</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">        // Since we are sending asynchronous RPC (\`done&#39; is not NULL),</span></span>
<span class="line"><span style="color:#676E95;">        // these objects MUST remain valid until \`done&#39; is called.</span></span>
<span class="line"><span style="color:#676E95;">        // As a result, we allocate these objects on heap</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">example</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">EchoResponse</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">example</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">EchoResponse</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">brpc</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Controller</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> cntl </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">brpc</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Controller</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">        // Notice that you don&#39;t have to new request, which can be modified</span></span>
<span class="line"><span style="color:#676E95;">        // or destroyed just after stub.Echo is called.</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">example</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">EchoRequest request</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_message</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">cntl</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">set_log_id</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">log_id </span><span style="color:#89DDFF;">++);</span><span style="color:#676E95;">  // set by user</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">FLAGS_send_attachment</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">            // Set attachment which is wired to network directly instead of </span></span>
<span class="line"><span style="color:#676E95;">            // being serialized into protobuf messages.</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">cntl</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">request_attachment</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">        // We use protobuf utility \`NewCallback&#39; to create a closure object</span></span>
<span class="line"><span style="color:#676E95;">        // that will call our callback \`HandleEchoResponse&#39;. This closure</span></span>
<span class="line"><span style="color:#676E95;">        // will automatically delete itself after being called once</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">google</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">protobuf</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Closure</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> done </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">brpc</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">NewCallback</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">HandleEchoResponse</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> cntl</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> response</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">stub</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Echo</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">cntl</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">request</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> response</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> done</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">        // This is an asynchronous RPC, so we can only fetch the result</span></span>
<span class="line"><span style="color:#676E95;">        // inside the callback</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>coro_rpc\u534F\u7A0B</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;"># include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">coro_rpc/coro_rpc_client.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Lazy</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">say_hello</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">  coro_rpc_client client</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">co_await</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;"> /*port =*/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">9000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(true){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">co_await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">echo</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello coro_rpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello coro_rpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>coro_rpc\u7684\u4E00\u5927\u7279\u8272\u5C31\u662F\u652F\u6301\u65E0\u6808\u534F\u7A0B\uFF0C\u8BA9\u7528\u6237\u4EE5\u540C\u6B65\u65B9\u5F0F\u7F16\u5199\u5F02\u6B65\u4EE3\u7801\uFF0C\u7B80\u6D01\u6613\u61C2\uFF01</p><h1 id="coro-rpc\u66F4\u591A\u7279\u8272" tabindex="-1">coro_rpc\u66F4\u591A\u7279\u8272 <a class="header-anchor" href="#coro-rpc\u66F4\u591A\u7279\u8272" aria-hidden="true">#</a></h1><h2 id="\u540C\u65F6\u652F\u6301\u5B9E\u65F6\u4EFB\u52A1\u548C\u5EF6\u65F6\u4EFB\u52A1" tabindex="-1">\u540C\u65F6\u652F\u6301\u5B9E\u65F6\u4EFB\u52A1\u548C\u5EF6\u65F6\u4EFB\u52A1 <a class="header-anchor" href="#\u540C\u65F6\u652F\u6301\u5B9E\u65F6\u4EFB\u52A1\u548C\u5EF6\u65F6\u4EFB\u52A1" aria-hidden="true">#</a></h2><p>\u524D\u9762\u5C55\u793A\u7684\u4F8B\u5B50\u91CC\u6CA1\u6709\u770B\u5230\u5982\u4F55\u5C06rpc\u51FD\u6570\u7684\u7ED3\u679Cresponse\u5230\u5BA2\u6237\u7AEF\uFF0C\u56E0\u4E3A\u9ED8\u8BA4\u60C5\u51B5\u4E0Bcoro_rpc\u6846\u67B6\u4F1A\u5E2E\u52A9\u7528\u6237\u81EA\u52A8\u7684\u5C06rpc\u51FD\u6570\u7684\u7ED3\u679C\u81EA\u52A8\u5E8F\u5217\u5316\u5E76\u53D1\u9001\u5230\u5BA2\u6237\u7AEF\uFF0C\u8BA9\u7528\u6237\u5B8C\u5168\u65E0\u611F\u77E5\uFF0C\u53EA\u9700\u8981\u4E13\u6CE8\u4E8E\u4E1A\u52A1\u903B\u8F91\u3002\u9700\u8981\u8BF4\u660E\u7684\u662F\u8FD9\u79CD\u573A\u666F\u4E0B\uFF0Crpc\u51FD\u6570\u7684\u4E1A\u52A1\u903B\u8F91\u662F\u5728io\u7EBF\u7A0B\u4E2D\u6267\u884C\u7684\uFF0C\u8FD9\u9002\u5408\u5BF9\u4E8E\u5B9E\u65F6\u6027\u8981\u6C42\u8F83\u9AD8\u7684\u573A\u666F\u4E0B\u4F7F\u7528\uFF0C\u7F3A\u70B9\u662F\u4F1A\u963B\u585EIO\u7EBF\u7A0B\u3002\u5982\u679C\u7528\u6237\u4E0D\u5E0C\u671B\u5728io\u7EBF\u7A0B\u4E2D\u53BB\u6267\u884C\u4E1A\u52A1\u903B\u8F91\uFF0C\u800C\u662F\u653E\u5230\u7EBF\u7A0B\u6216\u7EBF\u7A0B\u6C60\u4E2D\u53BB\u6267\u884C\u5E76\u5EF6\u8FDF\u53D1\u9001\u6D88\u606F\u8BE5\u600E\u4E48\u505A\u5462\uFF1F</p><p>coro_rpc\u5DF2\u7ECF\u8003\u8651\u5230\u4E86\u8FD9\u4E2A\u95EE\u9898\uFF0Ccoro_rpc\u8BA4\u4E3Arpc\u4EFB\u52A1\u5206\u4E3A\u5B9E\u65F6\u4EFB\u52A1\u548C\u5EF6\u65F6\u7684\u4EFB\u52A1\uFF0C\u5B9E\u65F6\u4EFB\u52A1\u5728io\u7EBF\u7A0B\u4E2D\u6267\u884C\u5B8C\u6210\u540E\u7ACB\u5373\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\uFF0C\u5B9E\u65F6\u6027\u6700\u597D\uFF0C\u5EF6\u65F6\u6700\u4F4E\uFF1B\u5EF6\u65F6\u4EFB\u52A1\u5219\u53EF\u4EE5\u653E\u5230\u72EC\u7ACB\u7EBF\u7A0B\u4E2D\u6267\u884C\uFF0C\u5EF6\u65F6\u5904\u7406\uFF0C\u5728\u672A\u6765\u67D0\u4E2A\u65F6\u523B\u518D\u5C06\u7ED3\u679C\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\uFF1Bcoro_rpc\u540C\u65F6\u652F\u6301\u8FD9\u4E24\u79CD\u4EFB\u52A1\u3002</p><p>\u5C06\u4E4B\u524D\u5B9E\u65F6\u4EFB\u52A1\u6539\u6210\u5EF6\u65F6\u4EFB\u52A1</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">coro_rpc/context.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">//\u5B9E\u65F6\u4EFB\u52A1\uFF0Cio\u7EBF\u7A0B\u4E2D\u5B9E\u65F6\u5904\u7406\u548C\u53D1\u9001\u7ED3\u679C</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">//\u5EF6\u65F6\u4EFB\u52A1\uFF0C\u5728\u53E6\u5916\u7684\u72EC\u7ACB\u7EBF\u7A0B\u4E2D\u5904\u7406\u5E76\u53D1\u9001\u7ED3\u679C</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">delay_echo</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">coro_rpc</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">thread</span><span style="color:#89DDFF;">([</span><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">]{</span></span>
<span class="line"><span style="color:#A6ACCD;">    conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">response_msg</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> //\u5728\u72EC\u7ACB\u7EBF\u7A0B\u4E2D\u53D1\u9001rpc\u7ED3\u679C</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}).</span><span style="color:#82AAFF;">detach</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="\u670D\u52A1\u7AEF\u540C\u65F6\u652F\u6301\u534F\u7A0B\u548C\u5F02\u6B65\u56DE\u8C03" tabindex="-1">\u670D\u52A1\u7AEF\u540C\u65F6\u652F\u6301\u534F\u7A0B\u548C\u5F02\u6B65\u56DE\u8C03 <a class="header-anchor" href="#\u670D\u52A1\u7AEF\u540C\u65F6\u652F\u6301\u534F\u7A0B\u548C\u5F02\u6B65\u56DE\u8C03" aria-hidden="true">#</a></h2><p>coro_rpc server\u63A8\u8350\u4F7F\u7528\u534F\u7A0B\u53BB\u5F00\u53D1\uFF0C\u4F46\u540C\u65F6\u4E5F\u652F\u6301\u5F02\u6B65\u56DE\u8C03\u6A21\u5F0F\uFF0C\u7528\u6237\u5982\u679C\u4E0D\u5E0C\u671B\u4F7F\u7528\u534F\u7A0B\uFF0C\u5219\u53EF\u4EE5\u4F7F\u7528\u7ECF\u5178\u7684\u5F02\u6B65\u56DE\u8C03\u6A21\u5F0F\u3002</p><p>\u57FA\u4E8E\u534F\u7A0B\u7684rpc server</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">coro_rpc/coro_rpc_server.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello coro_rpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  coro_rpc_server </span><span style="color:#82AAFF;">server</span><span style="color:#89DDFF;">(</span><span style="color:#676E95;">/*thread_num =*/</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;"> /*port =*/</span><span style="color:#F78C6C;">9000</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">register_handler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u57FA\u4E8E\u5F02\u6B65\u56DE\u8C03\u7684rpc server</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">coro_rpc/async_rpc_server.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello coro_rpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  async_rpc_server </span><span style="color:#82AAFF;">server</span><span style="color:#89DDFF;">(</span><span style="color:#676E95;">/*thread_num =*/</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;"> /*port =*/</span><span style="color:#F78C6C;">9000</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">register_handler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">  server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>rpc\u8C03\u7528\u7F16\u8BD1\u671F\u5B89\u5168\u68C0\u67E5 coro_rpc\u4F1A\u5728\u8C03\u7528\u7684\u65F6\u5019\u5BF9\u53C2\u6570\u7684\u5408\u6CD5\u6027\u505A\u7F16\u8BD1\u671F\u68C0\u67E5\uFF0C\u6BD4\u5982:</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">inline</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>client\u8C03\u7528rpc</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">echo</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F78C6C;">42</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;">//\u53C2\u6570\u4E0D\u5339\u914D\uFF0C\u7F16\u8BD1\u62A5\u9519</span></span>
<span class="line"><span style="color:#A6ACCD;">client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">echo</span><span style="color:#89DDFF;">&gt;();</span><span style="color:#676E95;">//\u7F3A\u5C11\u53C2\u6570\uFF0C\u7F16\u8BD1\u62A5\u9519</span></span>
<span class="line"><span style="color:#A6ACCD;">client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">echo</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;">//\u591A\u4E86\u53C2\u6570\uFF0C\u7F16\u8BD1\u62A5\u9519</span></span>
<span class="line"><span style="color:#A6ACCD;">client</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">call</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">echo</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello, coro_rpc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;">//\u53C2\u6570\u5339\u914D\uFF0Cok</span></span>
<span class="line"></span></code></pre></div><h1 id="benchmark" tabindex="-1">benchmark <a class="header-anchor" href="#benchmark" aria-hidden="true">#</a></h1><h2 id="\u6D4B\u8BD5\u73AF\u5883" tabindex="-1">\u6D4B\u8BD5\u73AF\u5883 <a class="header-anchor" href="#\u6D4B\u8BD5\u73AF\u5883" aria-hidden="true">#</a></h2><p>\u786C\u4EF6\uFF1A Intel(R) Xeon(R) Platinum 8163 CPU @ 2.50GHz 96\u6838</p><p>OS: Linux version 4.9.151-015.ali3000.alios7.x86_64</p><p>\u7F16\u8BD1\u5668\uFF1AAlibaba Clang13 C++20</p><h2 id="\u6D4B\u8BD5case" tabindex="-1">\u6D4B\u8BD5case <a class="header-anchor" href="#\u6D4B\u8BD5case" aria-hidden="true">#</a></h2><p>\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u7AEF\u90FD\u5728\u540C\u4E00\u53F0\u673A\u5668\u4E0A\uFF0C\u4F7F\u7528\u4E0D\u540C\u8FDE\u63A5\u6570\u53D1\u9001\u8BF7\u6C42\u505Aecho\u6D4B\u8BD5\u3002</p><h3 id="\u6781\u9650qps\u6D4B\u8BD5" tabindex="-1">\u6781\u9650qps\u6D4B\u8BD5 <a class="header-anchor" href="#\u6781\u9650qps\u6D4B\u8BD5" aria-hidden="true">#</a></h3><ol><li>\u901A\u8FC7pipline\u53D1\u9001\u6570\u636E\u548C\u63A5\u6536\u6570\u636E\uFF0C\u628Acpu\u6253\u6EE1\u540E\u5F97\u5230\u6700\u9AD8qps<br><img src="`+p+'" alt="max_qps"></li></ol><h3 id="ping-pong\u6D4B\u8BD5" tabindex="-1">ping-pong\u6D4B\u8BD5 <a class="header-anchor" href="#ping-pong\u6D4B\u8BD5" aria-hidden="true">#</a></h3><ol><li>\u8BF7\u6C42\u548C\u54CD\u5E94\u5B8C\u6210\u4E4B\u540E\u518D\u53D1\u4E0B\u4E00\u6B21\u8BF7\u6C42\uFF0C\u6D4B\u8BD5\u8BE5\u573A\u666F\u4E0B\u7684qps\uFF1B</li><li>\u6D4B\u8BD5\u8FDE\u63A5\u6570\u4E0D\u65AD\u589E\u591A\u65F6qps\u7684\u53D8\u5316\uFF1B</li><li>\u6D4B\u91CFping-pong\u7684\u5E73\u5747\u5EF6\u65F6<br><img src="'+o+'" alt="ping_pong_qps"><img src="'+e+'" alt="pingpong_time"></li></ol><h3 id="\u957F\u5C3E\u6D4B\u8BD5" tabindex="-1">\u957F\u5C3E\u6D4B\u8BD5 <a class="header-anchor" href="#\u957F\u5C3E\u6D4B\u8BD5" aria-hidden="true">#</a></h3><ol><li>1%\u6162\u8BF7\u6C42(\u5F02\u6B65\u7B49\u5F8550ms)\u4E0Bqps\u548C\u5EF6\u65F6<br><img src="'+c+'" alt="long_tail_qps"><img src="'+t+'" alt="long_tail_time"></li></ol><h2 id="benchmark\u5907\u6CE8" tabindex="-1">benchmark\u5907\u6CE8 <a class="header-anchor" href="#benchmark\u5907\u6CE8" aria-hidden="true">#</a></h2><ol><li>grpc\u7684qps\u59CB\u7EC8\u4E0D\u4F1A\u8D85\u8FC710\u4E07\uFF0C\u6545\u6CA1\u6709\u653E\u8FDB\u6765\u505A\u6027\u80FD\u6BD4\u8F83\uFF1B</li><li>\u6D4B\u8BD5\u5BA2\u6237\u7AEF\u7EDF\u4E00\u7528coro_rpc\u7684\u538B\u6D4B\u5BA2\u6237\u7AEF\u6D4B\u8BD5\uFF0C\u538B\u6D4B\u6548\u679C\u8F83\u597D\uFF0C\u57FA\u672C\u80FD\u628Acpu\u6253\u6EE1\u3002\u6CA1\u6709\u4F7F\u7528brpc\u6D4B\u8BD5\u5BA2\u6237\u7AEF\u539F\u56E0\u662F\uFF1A\u5982\u679C\u7528brpc\u5BA2\u6237\u7AEF\u538B\u6D4B\uFF0Cbrpc\u7684qps\u4F1A\u964D\u4F4E\u4E00\u500D\u3002</li><li>brpc\u7531\u4E8E\u91C7\u7528\u4E86\u8FDE\u63A5\u590D\u7528\uFF0C\u5B9E\u9645\u4E0A\u7684socket\u8FDE\u63A5\u6570\u5E76\u6CA1\u6709\u90A3\u4E48\u591A(\u5B9E\u9645\u8FDE\u63A5\u6570\u4E3A96)\uFF0Ccoro_rpc\u7684\u8FDE\u63A5\u6570\u662F\u5B9E\u9645\u7684\u8FDE\u63A5\u6570\u3002</li></ol><h1 id="\u4F7F\u7528\u7EA6\u675F" tabindex="-1">\u4F7F\u7528\u7EA6\u675F <a class="header-anchor" href="#\u4F7F\u7528\u7EA6\u675F" aria-hidden="true">#</a></h1><ol><li>\u76EE\u524D\u53EA\u652F\u6301\u5C0F\u7AEF\uFF0C\u517C\u5BB9\u5927\u7AEF\u7684\u5DE5\u4F5C\u6B63\u5728\u505A\uFF1B</li><li>\u76EE\u524D\u53EA\u652F\u6301C++\uFF0C\u6682\u65F6\u8FD8\u4E0D\u652F\u6301\u8DE8\u8BED\u8A00\uFF1B\u7F16\u8BD1\u5668\u8981\u6C42\u80FD\u652F\u6301C++20(clang13, gcc10.2, msvc2022)\uFF1B</li><li>gcc\u5982\u679C\u5728O3\u4E0B\u51FA\u73B0\u94FE\u63A5\u5931\u8D25\uFF0C\u8BF7\u5F00\u542F\u9009\u9879-fno-tree-slp-vectorize\u4EE5\u7981\u7528\u8BE5\u4F18\u5316\u9009\u9879\u3002</li></ol>',65),D=[F];function y(C,A,i,d,h,u){return a(),n("div",null,D)}const B=s(r,[["render",y]]);export{_ as __pageData,B as default};
