import{_ as s,c as n,o as a,a as e}from"./app.3b6e8018.js";const D=JSON.parse('{"title":"struct_pb API","description":"","frontmatter":{},"headers":[{"level":2,"title":"Serialization","slug":"serialization","link":"#serialization","children":[]},{"level":2,"title":"Deserialization","slug":"deserialization","link":"#deserialization","children":[]}],"relativePath":"guide/struct-pb-api.md","lastUpdated":null}'),l={name:"guide/struct-pb-api.md"},o=e(`<h1 id="struct-pb-api" tabindex="-1">struct_pb API <a class="header-anchor" href="#struct-pb-api" aria-hidden="true">#</a></h1><p>Current, struct_pb provide low-level APIs only, which are in namespace <code>struct_pb::internal</code>.</p><p>For example, the <code>SearchRequest</code> message from <a href="https://developers.google.com/protocol-buffers/docs/proto3#simple" target="_blank" rel="noreferrer">Language Guide (proto3)</a></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">syntax = &quot;proto3&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">message SearchRequest {</span></span>
<span class="line"><span style="color:#A6ACCD;">  string query = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">  int32 page_number = 2;</span></span>
<span class="line"><span style="color:#A6ACCD;">  int32 result_per_page = 3;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>we generate the source code</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">SearchRequest</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string query</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // string, field number = 1</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int32_t</span><span style="color:#F07178;"> page_number</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // int32, field number = 2</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int32_t</span><span style="color:#F07178;"> result_per_page</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // int32, field number = 3</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">internal</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">// ::SearchRequest</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">get_needed_size</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">SearchRequest</span><span style="color:#C792EA;">&amp;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">UnknownFields</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">unknown_fields</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> {}</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">serialize_to</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">char*</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">SearchRequest</span><span style="color:#C792EA;">&amp;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">UnknownFields</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">unknown_fields</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> {}</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">deserialize_to</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">SearchRequest</span><span style="color:#C792EA;">&amp;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char*</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">UnknownFields</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">deserialize_to</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">SearchRequest</span><span style="color:#C792EA;">&amp;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char*</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> // internal</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> // struct_pb</span></span>
<span class="line"></span></code></pre></div><h2 id="serialization" tabindex="-1">Serialization <a class="header-anchor" href="#serialization" aria-hidden="true">#</a></h2><ul><li>get_needed_size</li></ul><p>To get the buffer size, use the <code>get_needed_size</code> function.</p><p>To support <a href="https://developers.google.com/protocol-buffers/docs/proto3#unknowns" target="_blank" rel="noreferrer">Unknown Fields</a>, an extra argument <code>unknown_fields</code> with default value is added.</p><ul><li>serialize_to</li></ul><p>To serialize a message to a buffer, use the <code>serialize_to</code> function.</p><p>Before use this function, make sure the buffer is sufficiently large. e.g. use <code>get_needed_size</code> and then allocate buffer.</p><p>To support <a href="https://developers.google.com/protocol-buffers/docs/proto3#unknowns" target="_blank" rel="noreferrer">Unknown Fields</a>, an extra argument <code>unknown_fields</code> with default value is added.</p><h2 id="deserialization" tabindex="-1">Deserialization <a class="header-anchor" href="#deserialization" aria-hidden="true">#</a></h2><ul><li>deserialize_to</li></ul><p>To deserialize a message from buffer, use the <code>deserialize_to</code> function.</p><p>Returns true on success.</p><p>To support <a href="https://developers.google.com/protocol-buffers/docs/proto3#unknowns" target="_blank" rel="noreferrer">Unknown Fields</a>, the overload function with an extra argument <code>unknown_fields</code> is added.</p>`,19),p=[o];function t(r,c,i,F,y,d){return a(),n("div",null,p)}const C=s(l,[["render",t]]);export{D as __pageData,C as default};
