import{_ as s,c as n,o as a,a as l}from"./app.3b6e8018.js";const A=JSON.parse('{"title":"struct_pb Quick Start","description":"","frontmatter":{},"headers":[{"level":2,"title":"Defining Your Protocol Format","slug":"defining-your-protocol-format","link":"#defining-your-protocol-format","children":[]},{"level":2,"title":"Compiling Your Protocol Buffers","slug":"compiling-your-protocol-buffers","link":"#compiling-your-protocol-buffers","children":[]},{"level":2,"title":"The struct_pb low-level API","slug":"the-struct-pb-low-level-api","link":"#the-struct-pb-low-level-api","children":[]},{"level":2,"title":"The struct_pb high-level API","slug":"the-struct-pb-high-level-api","link":"#the-struct-pb-high-level-api","children":[]},{"level":2,"title":"Writing A Message","slug":"writing-a-message","link":"#writing-a-message","children":[]},{"level":2,"title":"Reading A Message","slug":"reading-a-message","link":"#reading-a-message","children":[]},{"level":2,"title":"the demo code","slug":"the-demo-code","link":"#the-demo-code","children":[]}],"relativePath":"guide/struct-pb-quick-start.md","lastUpdated":null}'),o={name:"guide/struct-pb-quick-start.md"},p=l(`<h1 id="struct-pb-quick-start" tabindex="-1">struct_pb Quick Start <a class="header-anchor" href="#struct-pb-quick-start" aria-hidden="true">#</a></h1><p>Note: if you are not familiar with the official c++ implement, <a href="https://developers.google.com/protocol-buffers/docs/cpptutorial" target="_blank" rel="noreferrer">Protocol Buffer Basics: C++</a> is a good material to learn.</p><p>This tutorial provides a basic C++ programmer&#39;s introduction to work with struct_pb, which is the protobuf compatible solution of the <a href="https://github.com/alibaba/yalantinglibs" target="_blank" rel="noreferrer">yalantinglibs</a>.</p><p>By walking through creating a simple example application, it shows you how to</p><ul><li>Define message formats in a <code>.proto</code> file. (same as official protobuf document)</li><li>Use the protocol buffer compiler (<code>protoc</code>) with <code>struct_pb</code> plugin.</li><li>Use the <code>struct_pb</code> low-level API to write and read messages.</li></ul><h2 id="defining-your-protocol-format" tabindex="-1">Defining Your Protocol Format <a class="header-anchor" href="#defining-your-protocol-format" aria-hidden="true">#</a></h2><p>we use proto3 here.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">syntax = &quot;proto3&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">package tutorial;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">message Person {</span></span>
<span class="line"><span style="color:#A6ACCD;">  string name = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">  int32 id = 2;</span></span>
<span class="line"><span style="color:#A6ACCD;">  string email = 3;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  enum PhoneType {</span></span>
<span class="line"><span style="color:#A6ACCD;">    MOBILE = 0;</span></span>
<span class="line"><span style="color:#A6ACCD;">    HOME = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">    WORK = 2;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  message PhoneNumber {</span></span>
<span class="line"><span style="color:#A6ACCD;">    string number = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">    PhoneType type = 2;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  repeated PhoneNumber phones = 4;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">message AddressBook {</span></span>
<span class="line"><span style="color:#A6ACCD;">  repeated Person people = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="compiling-your-protocol-buffers" tabindex="-1">Compiling Your Protocol Buffers <a class="header-anchor" href="#compiling-your-protocol-buffers" aria-hidden="true">#</a></h2><p>Now that you have a <code>.proto</code>, the next thing you need to do is generate the struct you&#39;ll need to read and write <code>AddressBook</code> (and hence <code>Person</code> and <code>PhoneNumber</code>) messages. To do this, you need to run the protocol buffer compiler <code>protoc</code> with <code>struct_pb</code> plugin <code>protoc-gen-struct_pb</code> on your <code>.proto</code>.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">protoc -I=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">SRC_DIR --plugin=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">PATH_TO_protoc-gen-struct_pb --struct_pb_out=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DST_DIR </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">SRC_DIR/addressbook.proto</span></span>
<span class="line"></span></code></pre></div><p>see <a href="https://alibaba.github.io/yalantinglibs/guide/struct-pb-generating-your-struct.html" target="_blank" rel="noreferrer">Generating source code</a> for details.</p><p>This generates the following files in your specified destination directory:</p><ul><li><code>addressbook.struct_pb.h</code>, the header which declares your generated struct.</li><li><code>addressbook.struct_pb.cc</code>, which contains the <code>struct_pb</code> low-level API implementation of your struct.</li></ul><h2 id="the-struct-pb-low-level-api" tabindex="-1">The struct_pb low-level API <a class="header-anchor" href="#the-struct-pb-low-level-api" aria-hidden="true">#</a></h2><p>Let&#39;s look at some generated code and see what struct and functions the compiler has created for you. If you look in <code>addressbook.struct_pb.h</code>, you can see that you have a struct for each message you specified in <code>addressbook.proto</code>.</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">tutorial</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">AddressBook</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">PhoneType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">MOBILE</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">HOME</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">WORK</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">PhoneNumber</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string number</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // string, field number = 1</span></span>
<span class="line"><span style="color:#F07178;">    ::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">PhoneType type</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // enum, field number = 2</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string name</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // string, field number = 1</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int32_t</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // int32, field number = 2</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string email</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // string, field number = 3</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">PhoneNumber</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> phones</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // message, field number = 4</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">AddressBook</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Person</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> people</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // message, field number = 1</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> // namespace tutorial</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">internal</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">// ::tutorial::Person::PhoneNumber</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">get_needed_size</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneNumber</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">PhoneNumber</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">UnknownFields</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">serialize_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneNumber</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">PhoneNumber</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">UnknownFields</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">deserialize_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneNumber</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">PhoneNumber</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">UnknownFields</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">deserialize_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneNumber</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">PhoneNumber</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// ::tutorial::Person</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">get_needed_size</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Person</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">UnknownFields</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">serialize_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Person</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">UnknownFields</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">deserialize_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Person</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">UnknownFields</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">deserialize_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Person</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// ::tutorial::AddressBook</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">get_needed_size</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">AddressBook</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">AddressBook</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">UnknownFields</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">serialize_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">AddressBook</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">AddressBook</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">UnknownFields</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">deserialize_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">AddressBook</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">AddressBook</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> ::</span><span style="color:#FFCB6B;">struct_pb</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">UnknownFields</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> unknown_fields</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">deserialize_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">AddressBook</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F07178;">::</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">AddressBook</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> // internal</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> // struct_pb</span></span>
<span class="line"></span></code></pre></div><h2 id="the-struct-pb-high-level-api" tabindex="-1">The struct_pb high-level API <a class="header-anchor" href="#the-struct-pb-high-level-api" aria-hidden="true">#</a></h2><p>We encapsulate the low-level API to make <code>struct_pb</code> easier to use.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">/*</span></span>
<span class="line"><span style="color:#A6ACCD;"> * High-Level API for struct_pb user</span></span>
<span class="line"><span style="color:#A6ACCD;"> * If you need more fine-grained operations, encapsulate the internal API yourself.</span></span>
<span class="line"><span style="color:#A6ACCD;"> */</span></span>
<span class="line"><span style="color:#A6ACCD;">template&lt;typename Buffer = std::vector&lt;char&gt;, typename T&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">Buffer serialize(const T&amp; t, const UnknownFields&amp; unknown_fields = {}) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  Buffer buffer;</span></span>
<span class="line"><span style="color:#A6ACCD;">  auto size = struct_pb::internal::get_needed_size(t, unknown_fields);</span></span>
<span class="line"><span style="color:#A6ACCD;">  buffer.resize(size);</span></span>
<span class="line"><span style="color:#A6ACCD;">  struct_pb::internal::serialize_to(buffer.data(), buffer.size(), t, unknown_fields);</span></span>
<span class="line"><span style="color:#A6ACCD;">  return buffer;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">template&lt;typename T, typename Buffer&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">bool deserialize_to(T&amp; t, UnknownFields&amp; unknown_fields, const Buffer&amp; buffer) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  return struct_pb::internal::deserialize_to(t, buffer.data(), buffer.size(), unknown_fields);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">template&lt;typename T, typename Buffer&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">bool deserialize_to(T&amp; t, const Buffer&amp; buffer) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  return struct_pb::internal::deserialize_to(t, buffer.data(), buffer.size());</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="writing-a-message" tabindex="-1">Writing A Message <a class="header-anchor" href="#writing-a-message" aria-hidden="true">#</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">prompt_for_address</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==================================</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">            Add People            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==================================</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Enter person ID number: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cin </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cin</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ignore</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">256</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Enter name: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getline</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cin</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Enter email address (blank for none): </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getline</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cin</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">email</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(true)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Enter a phone number (or leave blank to finish): </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">PhoneNumber phone_number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getline</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cin</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">phone_number</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">number</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">phone_number</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">empty</span><span style="color:#89DDFF;">())</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">break</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Is this a mobile, home, or work phone? </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string type</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getline</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cin</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> type</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">type </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mobile</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">phone_number</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneType</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">MOBILE</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">type </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">home</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">phone_number</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneType</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">HOME</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">type </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">work</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">phone_number</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneType</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">WORK</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Unknown phone type: Using default.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">phones</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push_back</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">phone_number</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="reading-a-message" tabindex="-1">Reading A Message <a class="header-anchor" href="#reading-a-message" aria-hidden="true">#</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">list_people</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">AddressBook</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">address_book</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==================================</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">          List People             </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==================================</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">for</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> address_book</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">people</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">     Person ID: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">          Name: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">email</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">empty</span><span style="color:#89DDFF;">())</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">E-mail address: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">email</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">for</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> phone</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">phones</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">phone</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneType</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">MOBILE</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Mobile phone #: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneType</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">HOME</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">  Home phone #: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">tutorial</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">PhoneType</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">WORK</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">  Work phone #: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">phone</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">number</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="the-demo-code" tabindex="-1">the demo code <a class="header-anchor" href="#the-demo-code" aria-hidden="true">#</a></h2><ul><li><a href="https://github.com/alibaba/yalantinglibs/blob/main/src/struct_pb/examples/tutorial.cpp" target="_blank" rel="noreferrer">code in yalantinglibs repo</a></li><li><a href="https://github.com/PikachuHyA/struct_pb_tutorial" target="_blank" rel="noreferrer">code in standalone repo</a></li></ul>`,26),e=[p];function t(r,c,F,y,D,i){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
