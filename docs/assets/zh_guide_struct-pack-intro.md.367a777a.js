import{_ as s,c as a,o as n,a as l}from"./app.3b6e8018.js";const p="/yalantinglibs/assets/struct_pack_bench.652b03dd.png",d=JSON.parse('{"title":"struct_pack\u7B80\u4ECB","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5E8F\u5217\u5316","slug":"\u5E8F\u5217\u5316","link":"#\u5E8F\u5217\u5316","children":[{"level":3,"title":"\u57FA\u672C\u7528\u6CD5","slug":"\u57FA\u672C\u7528\u6CD5","link":"#\u57FA\u672C\u7528\u6CD5","children":[]},{"level":3,"title":"\u6307\u5B9A\u5E8F\u5217\u5316\u8FD4\u56DE\u7684\u5BB9\u5668\u7C7B\u578B","slug":"\u6307\u5B9A\u5E8F\u5217\u5316\u8FD4\u56DE\u7684\u5BB9\u5668\u7C7B\u578B","link":"#\u6307\u5B9A\u5E8F\u5217\u5316\u8FD4\u56DE\u7684\u5BB9\u5668\u7C7B\u578B","children":[]},{"level":3,"title":"\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BB9\u5668\u5C3E\u90E8","slug":"\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BB9\u5668\u5C3E\u90E8","link":"#\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BB9\u5668\u5C3E\u90E8","children":[]},{"level":3,"title":"\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u3002","slug":"\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u3002","link":"#\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u3002","children":[]},{"level":3,"title":"\u591A\u53C2\u6570\u5E8F\u5217\u5316","slug":"\u591A\u53C2\u6570\u5E8F\u5217\u5316","link":"#\u591A\u53C2\u6570\u5E8F\u5217\u5316","children":[]},{"level":3,"title":"\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u8F93\u51FA\u6D41","slug":"\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u8F93\u51FA\u6D41","link":"#\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u8F93\u51FA\u6D41","children":[]}]},{"level":2,"title":"\u53CD\u5E8F\u5217\u5316","slug":"\u53CD\u5E8F\u5217\u5316","link":"#\u53CD\u5E8F\u5217\u5316","children":[{"level":3,"title":"\u57FA\u672C\u7528\u6CD5","slug":"\u57FA\u672C\u7528\u6CD5-1","link":"#\u57FA\u672C\u7528\u6CD5-1","children":[]},{"level":3,"title":"\u4ECE\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u53CD\u5E8F\u5217\u5316","slug":"\u4ECE\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u53CD\u5E8F\u5217\u5316","link":"#\u4ECE\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u53CD\u5E8F\u5217\u5316","children":[]},{"level":3,"title":"\u53CD\u5E8F\u5217\u5316\uFF08\u5C06\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BF9\u8C61\u4E2D\uFF09","slug":"\u53CD\u5E8F\u5217\u5316-\u5C06\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BF9\u8C61\u4E2D","link":"#\u53CD\u5E8F\u5217\u5316-\u5C06\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BF9\u8C61\u4E2D","children":[]},{"level":3,"title":"\u591A\u53C2\u6570\u53CD\u5E8F\u5217\u5316","slug":"\u591A\u53C2\u6570\u53CD\u5E8F\u5217\u5316","link":"#\u591A\u53C2\u6570\u53CD\u5E8F\u5217\u5316","children":[]},{"level":3,"title":"\u4ECE\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316","slug":"\u4ECE\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316","link":"#\u4ECE\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316","children":[]},{"level":3,"title":"\u90E8\u5206\u53CD\u5E8F\u5217\u5316","slug":"\u90E8\u5206\u53CD\u5E8F\u5217\u5316","link":"#\u90E8\u5206\u53CD\u5E8F\u5217\u5316","children":[]}]},{"level":2,"title":"\u652F\u6301\u5E8F\u5217\u5316\u6240\u6709\u7684STL\u5BB9\u5668\u3001\u81EA\u5B9A\u4E49\u5BB9\u5668\u548Coptional","slug":"\u652F\u6301\u5E8F\u5217\u5316\u6240\u6709\u7684stl\u5BB9\u5668\u3001\u81EA\u5B9A\u4E49\u5BB9\u5668\u548Coptional","link":"#\u652F\u6301\u5E8F\u5217\u5316\u6240\u6709\u7684stl\u5BB9\u5668\u3001\u81EA\u5B9A\u4E49\u5BB9\u5668\u548Coptional","children":[]},{"level":2,"title":"\u81EA\u5B9A\u4E49\u529F\u80FD\u652F\u6301","slug":"\u81EA\u5B9A\u4E49\u529F\u80FD\u652F\u6301","link":"#\u81EA\u5B9A\u4E49\u529F\u80FD\u652F\u6301","children":[{"level":3,"title":"\u81EA\u5B9A\u4E49\u7C7B\u578B\u7684\u5E8F\u5217\u5316","slug":"\u81EA\u5B9A\u4E49\u7C7B\u578B\u7684\u5E8F\u5217\u5316","link":"#\u81EA\u5B9A\u4E49\u7C7B\u578B\u7684\u5E8F\u5217\u5316","children":[]},{"level":3,"title":"\u5E8F\u5217\u5316\u5230\u81EA\u5B9A\u4E49\u7684\u8F93\u51FA\u6D41","slug":"\u5E8F\u5217\u5316\u5230\u81EA\u5B9A\u4E49\u7684\u8F93\u51FA\u6D41","link":"#\u5E8F\u5217\u5316\u5230\u81EA\u5B9A\u4E49\u7684\u8F93\u51FA\u6D41","children":[]},{"level":3,"title":"\u4ECE\u81EA\u5B9A\u4E49\u7684\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316","slug":"\u4ECE\u81EA\u5B9A\u4E49\u7684\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316","link":"#\u4ECE\u81EA\u5B9A\u4E49\u7684\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316","children":[]}]},{"level":2,"title":"\u652F\u6301\u53EF\u53D8\u957F\u7F16\u7801\uFF1A","slug":"\u652F\u6301\u53EF\u53D8\u957F\u7F16\u7801","link":"#\u652F\u6301\u53EF\u53D8\u957F\u7F16\u7801","children":[]},{"level":2,"title":"benchmark","slug":"benchmark","link":"#benchmark","children":[{"level":3,"title":"\u6D4B\u8BD5\u65B9\u6CD5","slug":"\u6D4B\u8BD5\u65B9\u6CD5","link":"#\u6D4B\u8BD5\u65B9\u6CD5","children":[]},{"level":3,"title":"\u6D4B\u8BD5\u5BF9\u8C61","slug":"\u6D4B\u8BD5\u5BF9\u8C61","link":"#\u6D4B\u8BD5\u5BF9\u8C61","children":[]},{"level":3,"title":"\u6D4B\u8BD5\u73AF\u5883","slug":"\u6D4B\u8BD5\u73AF\u5883","link":"#\u6D4B\u8BD5\u73AF\u5883","children":[]},{"level":3,"title":"\u6D4B\u8BD5\u7ED3\u679C","slug":"\u6D4B\u8BD5\u7ED3\u679C","link":"#\u6D4B\u8BD5\u7ED3\u679C","children":[]}]},{"level":2,"title":"\u5411\u524D/\u5411\u540E\u517C\u5BB9\u6027","slug":"\u5411\u524D-\u5411\u540E\u517C\u5BB9\u6027","link":"#\u5411\u524D-\u5411\u540E\u517C\u5BB9\u6027","children":[]},{"level":2,"title":"\u4E3A\u4EC0\u4E48struct_pack\u66F4\u5FEB\uFF1F","slug":"\u4E3A\u4EC0\u4E48struct-pack\u66F4\u5FEB","link":"#\u4E3A\u4EC0\u4E48struct-pack\u66F4\u5FEB","children":[]},{"level":2,"title":"\u9644\u5F55","slug":"\u9644\u5F55","link":"#\u9644\u5F55","children":[{"level":3,"title":"\u5173\u4E8Estruct_pack\u7C7B\u578B\u7CFB\u7EDF","slug":"\u5173\u4E8Estruct-pack\u7C7B\u578B\u7CFB\u7EDF","link":"#\u5173\u4E8Estruct-pack\u7C7B\u578B\u7CFB\u7EDF","children":[]},{"level":3,"title":"\u5173\u4E8Estruct_pack\u7684\u7F16\u7801\u4E0E\u5E03\u5C40","slug":"\u5173\u4E8Estruct-pack\u7684\u7F16\u7801\u4E0E\u5E03\u5C40","link":"#\u5173\u4E8Estruct-pack\u7684\u7F16\u7801\u4E0E\u5E03\u5C40","children":[]},{"level":3,"title":"\u6D4B\u8BD5\u4EE3\u7801","slug":"\u6D4B\u8BD5\u4EE3\u7801","link":"#\u6D4B\u8BD5\u4EE3\u7801","children":[]}]}],"relativePath":"zh/guide/struct-pack-intro.md","lastUpdated":null}'),o={name:"zh/guide/struct-pack-intro.md"},e=l(`<h1 id="struct-pack\u7B80\u4ECB" tabindex="-1">struct_pack\u7B80\u4ECB <a class="header-anchor" href="#struct-pack\u7B80\u4ECB" aria-hidden="true">#</a></h1><p>struct_pack\u662F\u4E00\u4E2A\u4EE5\u96F6\u6210\u672C\u62BD\u8C61\uFF0C\u9AD8\u5EA6\u6613\u7528\u4E3A\u7279\u8272\u5E8F\u5217\u5316\u5E93\u3002\u901A\u5E38\u60C5\u51B5\u4E0B\u53EA\u9700\u4E00\u884C\u4EE3\u7801\u5373\u53EF\u5B8C\u6210\u590D\u6742\u7ED3\u6784\u4F53\u7684\u5E8F\u5217\u5316/\u53CD\u5E8F\u5217\u5316\u3002\u7528\u6237\u65E0\u9700\u5B9A\u4E49\u4EFB\u4F55DSL\uFF0C\u5B8F\u6216\u6A21\u677F\u4EE3\u7801\uFF0Cstruct_pack\u53EF\u901A\u8FC7\u7F16\u8BD1\u671F\u53CD\u5C04\u81EA\u52A8\u652F\u6301\u5BF9C++\u7ED3\u6784\u4F53\u7684\u5E8F\u5217\u5316\u3002\u5176\u7EFC\u5408\u6027\u80FD\u6BD4protobuf\uFF0Cmsgpack\u5927\u5E45\u63D0\u5347(\u8BE6\u7EC6\u53EF\u4EE5\u770Bbenchmark\u90E8\u5206)\u3002</p><p>\u4E0B\u9762\uFF0C\u6211\u4EEC\u4EE5\u4E00\u4E2A\u7B80\u5355\u7684\u5BF9\u8C61\u4E3A\u4F8B\u5C55\u793Astruc_pack\u7684\u57FA\u672C\u7528\u6CD5\u3002</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">person</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int64_t</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">double</span><span style="color:#F07178;"> salary</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">person person1</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">.id </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> .name </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello struct pack</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> .age </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> .salary </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1024.42</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="\u5E8F\u5217\u5316" tabindex="-1">\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u5E8F\u5217\u5316" aria-hidden="true">#</a></h2><h3 id="\u57FA\u672C\u7528\u6CD5" tabindex="-1">\u57FA\u672C\u7528\u6CD5 <a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// 1\u884C\u4EE3\u7801\u5E8F\u5217\u5316</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">serialize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="\u6307\u5B9A\u5E8F\u5217\u5316\u8FD4\u56DE\u7684\u5BB9\u5668\u7C7B\u578B" tabindex="-1">\u6307\u5B9A\u5E8F\u5217\u5316\u8FD4\u56DE\u7684\u5BB9\u5668\u7C7B\u578B <a class="header-anchor" href="#\u6307\u5B9A\u5E8F\u5217\u5316\u8FD4\u56DE\u7684\u5BB9\u5668\u7C7B\u578B" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">serialize</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">//\u6307\u5B9A\u4F7F\u7528std::string\u800C\u4E0D\u662Fstd::vector&lt;char&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BB9\u5668\u5C3E\u90E8" tabindex="-1">\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BB9\u5668\u5C3E\u90E8 <a class="header-anchor" href="#\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BB9\u5668\u5C3E\u90E8" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string result</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The next line is struct_pack serialize result.</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">serialize_to</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">//\u5C06\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BB9\u5668\u5C3E\u90E8\u3002</span></span>
<span class="line"></span></code></pre></div><h3 id="\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u3002" tabindex="-1">\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u3002 <a class="header-anchor" href="#\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u3002" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> sz</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">get_needed_siarray</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">unique_ptr array</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">make_unique</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">sz</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">serialize_to</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;">sz</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">//\u5C06\u7ED3\u679C\u4FDD\u5B58\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u3002</span></span>
<span class="line"></span></code></pre></div><h3 id="\u591A\u53C2\u6570\u5E8F\u5217\u5316" tabindex="-1">\u591A\u53C2\u6570\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u591A\u53C2\u6570\u5E8F\u5217\u5316" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">serialize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> person1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> person1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> person1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">salary</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">//serialize as std::tuple&lt;int64_t, std::string, int, double&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u8F93\u51FA\u6D41" tabindex="-1">\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u8F93\u51FA\u6D41 <a class="header-anchor" href="#\u5C06\u5E8F\u5217\u5316\u7ED3\u679C\u4FDD\u5B58\u5230\u8F93\u51FA\u6D41" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ofstream</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">writer</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">struct_pack_demo.data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ofstream</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">out</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ofstream</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">binary</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">serialize_to</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="\u53CD\u5E8F\u5217\u5316" tabindex="-1">\u53CD\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a></h2><h3 id="\u57FA\u672C\u7528\u6CD5-1" tabindex="-1">\u57FA\u672C\u7528\u6CD5 <a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5-1" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// 1\u884C\u4EE3\u7801\u53CD\u5E8F\u5217\u5316</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> person2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deserialize</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">person</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person2</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> // person2.has_value() == true</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">()==</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="\u4ECE\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u53CD\u5E8F\u5217\u5316" tabindex="-1">\u4ECE\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u53CD\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u4ECE\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// \u4ECE\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u4E2D\u53CD\u5E8F\u5217\u5316</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> person2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deserialize</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">person</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person2</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> //person2.has_value() == true</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">()==</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="\u53CD\u5E8F\u5217\u5316-\u5C06\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BF9\u8C61\u4E2D" tabindex="-1">\u53CD\u5E8F\u5217\u5316\uFF08\u5C06\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BF9\u8C61\u4E2D\uFF09 <a class="header-anchor" href="#\u53CD\u5E8F\u5217\u5316-\u5C06\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BF9\u8C61\u4E2D" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// \u5C06\u7ED3\u679C\u4FDD\u5B58\u5230\u5DF2\u6709\u7684\u5BF9\u8C61\u4E2D</span></span>
<span class="line"><span style="color:#A6ACCD;">person person2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">errc ec </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deserialize_to</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> buffer</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ec</span><span style="color:#89DDFF;">==</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">errc{}</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> // person2.has_value() == true</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person2</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="\u591A\u53C2\u6570\u53CD\u5E8F\u5217\u5316" tabindex="-1">\u591A\u53C2\u6570\u53CD\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u591A\u53C2\u6570\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> person2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deserialize</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int64_t</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">double</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person2</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> // person2.has_value() == true</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;[</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">salary</span><span style="color:#89DDFF;">]=</span><span style="color:#A6ACCD;">person2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">salary</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">salary</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="\u4ECE\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316" tabindex="-1">\u4ECE\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u4ECE\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ifstream</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ifs</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">struct_pack_demo.data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ofstream</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ofstream</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">binary</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> person2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">deserialize</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">person</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">ifs</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person2 </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> person1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="\u90E8\u5206\u53CD\u5E8F\u5217\u5316" tabindex="-1">\u90E8\u5206\u53CD\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u90E8\u5206\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a></h3><p>\u6709\u65F6\u5019\u53EA\u60F3\u53CD\u5E8F\u5217\u5316\u5BF9\u8C61\u7684\u67D0\u4E2A\u7279\u5B9A\u7684\u5B57\u6BB5\u800C\u4E0D\u662F\u5168\u90E8\uFF0C\u8FD9\u65F6\u5019\u5C31\u53EF\u4EE5\u7528\u90E8\u5206\u53CD\u5E8F\u5217\u5316\u529F\u80FD\u4E86\uFF0C\u8FD9\u6837\u53EF\u4EE5\u907F\u514D\u5168\u90E8\u53CD\u5E8F\u5217\u5316\uFF0C\u5927\u5E45\u63D0\u5347\u6548\u7387\u3002</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// \u53EA\u53CD\u5E8F\u5217\u5316person\u7684\u7B2C2\u4E2A\u5B57\u6BB5</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_field</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">person</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> // name.has_value() == true</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello struct pack</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="\u652F\u6301\u5E8F\u5217\u5316\u6240\u6709\u7684stl\u5BB9\u5668\u3001\u81EA\u5B9A\u4E49\u5BB9\u5668\u548Coptional" tabindex="-1">\u652F\u6301\u5E8F\u5217\u5316\u6240\u6709\u7684STL\u5BB9\u5668\u3001\u81EA\u5B9A\u4E49\u5BB9\u5668\u548Coptional <a class="header-anchor" href="#\u652F\u6301\u5E8F\u5217\u5316\u6240\u6709\u7684stl\u5BB9\u5668\u3001\u81EA\u5B9A\u4E49\u5BB9\u5668\u548Coptional" aria-hidden="true">#</a></h2><p>\u542B\u5404\u79CD\u5BB9\u5668\u7684\u5BF9\u8C61\u5E8F\u5217\u5316</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Color</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">red</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">black</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">white</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">complicated_object</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  Color color</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">person</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> c</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">list</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> d</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">deque</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> e</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> person</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> f</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">multimap</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> person</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">set</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> h</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">multiset</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">unordered_map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> person</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> j</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">unordered_multimap</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> k</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">person</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  person </span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">pair</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> person</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> o</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">optional</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">unique_ptr</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> q</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">nested_object</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  person p</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  complicated_object o</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">nested_object nested</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">.id </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> .name </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> .p </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> .o </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}};</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> buffer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">serialize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">nested</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> nested2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deserialize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">nested2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">nested2</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">nested1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="\u81EA\u5B9A\u4E49\u529F\u80FD\u652F\u6301" tabindex="-1">\u81EA\u5B9A\u4E49\u529F\u80FD\u652F\u6301 <a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u529F\u80FD\u652F\u6301" aria-hidden="true">#</a></h2><h3 id="\u81EA\u5B9A\u4E49\u7C7B\u578B\u7684\u5E8F\u5217\u5316" tabindex="-1">\u81EA\u5B9A\u4E49\u7C7B\u578B\u7684\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u7C7B\u578B\u7684\u5E8F\u5217\u5316" aria-hidden="true">#</a></h3><p>struct_pack\u652F\u6301\u5E8F\u5217\u5316\u81EA\u5B9A\u4E49\u7C7B\u578B\u3002</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// We should not inherit from stl container, this case just for testing.</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Value</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_map</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">my_map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> map1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">map1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emplace</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">map1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emplace</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jerry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">absl</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">flat_hash_map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> map2 </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{{</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">huey</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dewey</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">louie</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> buffer1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">serialize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">map1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> buffer2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">serialize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">map2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>\u5173\u4E8E\u81EA\u5B9A\u4E49\u7C7B\u578B\u7684\u66F4\u591A\u7EC6\u8282\uFF0C\u8BF7\u89C1\uFF1A</p><p><a href="https://alibaba.github.io/yalantinglibs/zh/guide/struct-pack-type-system.html" target="_blank" rel="noreferrer">struct_pack\u7684\u7C7B\u578B\u7CFB\u7EDF</a></p><h3 id="\u5E8F\u5217\u5316\u5230\u81EA\u5B9A\u4E49\u7684\u8F93\u51FA\u6D41" tabindex="-1">\u5E8F\u5217\u5316\u5230\u81EA\u5B9A\u4E49\u7684\u8F93\u51FA\u6D41 <a class="header-anchor" href="#\u5E8F\u5217\u5316\u5230\u81EA\u5B9A\u4E49\u7684\u8F93\u51FA\u6D41" aria-hidden="true">#</a></h3><p>\u8BE5\u6D41\u9700\u8981\u6EE1\u8DB3\u4EE5\u4E0B\u7EA6\u675F\u6761\u4EF6\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">concept</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">writer_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">requires</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T t</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">((</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*)nullptr,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;">{}</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> //\u5411\u6D41\u8F93\u51FA\u4E00\u6BB5\u6570\u636E\u3002\u8FD4\u56DE\u503C\u5E94\u80FD\u9690\u5F0F\u8F6C\u6362\u4E3Abool\u503C\uFF0C\u51FA\u9519\u65F6\u5E94\u8FD4\u56DEfalse\u3002</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>\u4F8B\u5982\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"></span>
<span class="line"><span style="color:#676E95;">//\u4E00\u4E2A\u7B80\u5355\u7684\u8F93\u51FA\u6D41\uFF0C\u5BF9fwrite\u51FD\u6570\u8FDB\u884C\u5C01\u88C5\u3002</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">fwrite_stream</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  FILE</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> file</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sz</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fwrite</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> sz</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> file</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">fwrite_stream</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">file_name</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">file</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">fopen</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">file_name</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">~fwrite_stream</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fclose</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#FFCB6B;">fwrite_stream</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">writer</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">struct_pack_demo.data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">serialize_to</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">writer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="\u4ECE\u81EA\u5B9A\u4E49\u7684\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316" tabindex="-1">\u4ECE\u81EA\u5B9A\u4E49\u7684\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316 <a class="header-anchor" href="#\u4ECE\u81EA\u5B9A\u4E49\u7684\u8F93\u5165\u6D41\u4E2D\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a></h3><p>\u8BE5\u6D41\u9700\u8981\u6EE1\u8DB3\u4EE5\u4E0B\u7EA6\u675F\u6761\u4EF6\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">concept</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">reader_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">requires</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T t</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#89DDFF;">((</span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*)nullptr,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;">{}</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> //\u4ECE\u6D41\u4E2D\u8BFB\u53D6\u4E00\u6BB5\u6570\u636E\u3002\u8FD4\u56DE\u503C\u5E94\u80FD\u9690\u5F0F\u8F6C\u6362\u4E3Abool\u503C\uFF0C\u51FA\u9519\u65F6\u5E94\u8FD4\u56DEfalse\u3002</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ignore</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;">{}</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> //\u4ECE\u6D41\u4E2D\u8DF3\u8FC7\u4E00\u6BB5\u6570\u636E\u3002\u8FD4\u56DE\u503C\u5E94\u80FD\u9690\u5F0F\u8F6C\u6362\u4E3Abool\u503C\uFF0C\u51FA\u9519\u65F6\u5E94\u8FD4\u56DEfalse\u3002</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tellg</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;"> //\u8FD4\u56DE\u4E00\u4E2A\u65E0\u7B26\u53F7\u6574\u6570\uFF0C\u4EE3\u8868\u5F53\u524D\u7684\u7EDD\u5BF9\u8BFB\u53D6\u4F4D\u7F6E</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>\u6B64\u5916\uFF0C\u5982\u679C\u8BE5\u6D41\u8FD8\u989D\u5916\u652F\u6301<code>read_view</code>\u51FD\u6570\uFF0C\u5219\u652F\u6301\u5BF9string_view\u7684\u96F6\u62F7\u8D1D\u4F18\u5316\u3002</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">concept</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">view_reader_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">reader_t</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">requires</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T t</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_view</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;">{}</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">convertible_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*&gt;;</span></span>
<span class="line"><span style="color:#676E95;">  //\u4ECE\u6D41\u4E2D\u8BFB\u53D6\u4E00\u6BB5\u89C6\u56FE\uFF08\u96F6\u62F7\u8D1D\u8BFB\u53D6\uFF09\uFF0C\u8FD4\u56DE\u503C\u4E3A\u8BE5\u89C6\u56FE\u6307\u5411\u7684\u8D77\u59CB\u4F4D\u7F6E\uFF0C\u51FA\u9519\u65F6\u5E94\u8FD4\u56DE\u7A7A\u6307\u9488\u3002</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>\u793A\u4F8B\u4EE3\u7801\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">//\u4E00\u4E2A\u7B80\u5355\u7684\u8F93\u5165\u6D41\uFF0C\u5BF9fread\u51FD\u6570\u8FDB\u884C\u5C01\u88C5\u3002</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">fread_stream</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  FILE</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> file</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">read</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">char*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sz</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fread</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> sz</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> file</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ignore</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sz</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fseek</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> sz</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> SEEK_CUR</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">tellg</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">    //if you worry about ftell performance, just use an variable to record it.</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ftell</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">fread_stream</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">file_name</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">file</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">fopen</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">file_name</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">~fread_stream</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fclose</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">//...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">fread_stream</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ifs</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">struct_pack_demo.data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> person2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">deserialize</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">person</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">ifs</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person2 </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="\u652F\u6301\u53EF\u53D8\u957F\u7F16\u7801" tabindex="-1">\u652F\u6301\u53EF\u53D8\u957F\u7F16\u7801\uFF1A <a class="header-anchor" href="#\u652F\u6301\u53EF\u53D8\u957F\u7F16\u7801" aria-hidden="true">#</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">var_int32_t</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> vec</span><span style="color:#89DDFF;">={-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> buffer </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">serialize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">vec</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> //zigzag+varint\u7F16\u7801</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">uint64_t</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> vec</span><span style="color:#89DDFF;">={</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">UINT64_MAX</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> buffer </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">serialize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">vec</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;"> //varint\u7F16\u7801</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="benchmark" tabindex="-1">benchmark <a class="header-anchor" href="#benchmark" aria-hidden="true">#</a></h2><h3 id="\u6D4B\u8BD5\u65B9\u6CD5" tabindex="-1">\u6D4B\u8BD5\u65B9\u6CD5 <a class="header-anchor" href="#\u6D4B\u8BD5\u65B9\u6CD5" aria-hidden="true">#</a></h3><p>\u5F85\u5E8F\u5217\u5316\u7684\u5BF9\u8C61\u5DF2\u7ECF\u9884\u5148\u521D\u59CB\u5316\uFF0C\u5B58\u50A8\u5E8F\u5217\u5316\u7ED3\u679C\u7684\u5185\u5B58\u5DF2\u7ECF\u9884\u5148\u5206\u914D\u3002\u5BF9\u6BCF\u4E2A\u6D4B\u8BD5\u7528\u4F8B\u3002\u6211\u4EEC\u8FD0\u884C\u4E00\u767E\u4E07\u6B21\u5E8F\u5217\u5316/\u53CD\u5E8F\u5217\u5316\uFF0C\u5BF9\u7ED3\u679C\u53D6\u5E73\u5747\u503C\u3002</p><h3 id="\u6D4B\u8BD5\u5BF9\u8C61" tabindex="-1">\u6D4B\u8BD5\u5BF9\u8C61 <a class="header-anchor" href="#\u6D4B\u8BD5\u5BF9\u8C61" aria-hidden="true">#</a></h3><ol><li>\u542B\u6709\u6574\u5F62\u3001\u6D6E\u70B9\u578B\u548C\u5B57\u7B26\u4E32\u7C7B\u578Bperson\u5BF9\u8C61</li></ol><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">person</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int64_t</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">double</span><span style="color:#F07178;"> salary</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>\u542B\u6709\u5341\u51E0\u4E2A\u5B57\u6BB5\u5305\u62EC\u5D4C\u5957\u5BF9\u8C61\u7684\u590D\u6742\u5BF9\u8C61monster</li></ol><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Color</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">uint8_t</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Red</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Green</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Blue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Vec3</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> z</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Weapon</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int16_t</span><span style="color:#F07178;"> damage</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Monster</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  Vec3 pos</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int16_t</span><span style="color:#F07178;"> mana</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int16_t</span><span style="color:#F07178;"> hp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">uint8_t</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> inventory</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  Color color</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Weapon</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> weapons</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  Weapon equipped</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Vec3</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> path</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>\u542B\u67094\u4E2Aint32\u7684rect\u5BF9\u8C61</li></ol><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">rect</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int32_t</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int32_t</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int32_t</span><span style="color:#F07178;"> width</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int32_t</span><span style="color:#F07178;"> height</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h3 id="\u6D4B\u8BD5\u73AF\u5883" tabindex="-1">\u6D4B\u8BD5\u73AF\u5883 <a class="header-anchor" href="#\u6D4B\u8BD5\u73AF\u5883" aria-hidden="true">#</a></h3><p>Compiler: Alibaba Clang 13</p><p>CPU: (Intel(R) Xeon(R) Platinum 8163 CPU @ 2.50GHz)</p><h3 id="\u6D4B\u8BD5\u7ED3\u679C" tabindex="-1">\u6D4B\u8BD5\u7ED3\u679C <a class="header-anchor" href="#\u6D4B\u8BD5\u7ED3\u679C" aria-hidden="true">#</a></h3><p><img src="`+p+`" alt=""></p><h2 id="\u5411\u524D-\u5411\u540E\u517C\u5BB9\u6027" tabindex="-1">\u5411\u524D/\u5411\u540E\u517C\u5BB9\u6027 <a class="header-anchor" href="#\u5411\u524D-\u5411\u540E\u517C\u5BB9\u6027" aria-hidden="true">#</a></h2><p>\u5F53\u5BF9\u8C61\u589E\u52A0\u65B0\u7684\u5B57\u6BB5\u65F6\uFF0C\u600E\u4E48\u4FDD\u8BC1\u517C\u5BB9\u65B0\u65E7\u5BF9\u8C61\u7684\u89E3\u6790\u5462\uFF1F\u5F53\u7528\u6237\u9700\u8981\u6DFB\u52A0\u5B57\u6BB5\u65F6\uFF0C\u53EA\u9700\u8981\u5728<strong>\u65B0\u5BF9\u8C61\u672B\u5C3E</strong> \u589E\u52A0\u65B0\u7684 <code>struct_pack::compatible&lt;T&gt;</code> \u5B57\u6BB5\u5373\u53EF\u3002<br>\u4EE5person\u5BF9\u8C61\u4E3A\u4F8B\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">person</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">person1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">compatible</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int32_t</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">struct_pack</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">compatible</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">bool</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> maybe</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>struct_pack\u4FDD\u8BC1\u8FD9\u4E24\u4E2A\u7C7B\u53EF\u4EE5\u901A\u8FC7\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u5B9E\u73B0\u5B89\u5168\u7684\u76F8\u4E92\u8F6C\u6362\uFF0C\u4ECE\u800C\u5B9E\u73B0\u4E86\u5411\u524D/\u5411\u540E\u7684\u517C\u5BB9\u6027\u3002</p><h2 id="\u4E3A\u4EC0\u4E48struct-pack\u66F4\u5FEB" tabindex="-1">\u4E3A\u4EC0\u4E48struct_pack\u66F4\u5FEB\uFF1F <a class="header-anchor" href="#\u4E3A\u4EC0\u4E48struct-pack\u66F4\u5FEB" aria-hidden="true">#</a></h2><ol><li>\u7CBE\u7B80\u7684\u7C7B\u578B\u4FE1\u606F\uFF0C\u9AD8\u6548\u7684\u7C7B\u578B\u6821\u9A8C\u3002MD5\u8BA1\u7B97\u5728\u7F16\u8BD1\u671F\u5B8C\u6210\uFF0C\u8FD0\u884C\u65F6\u53EA\u9700\u8981\u6BD4\u8F8332bit\u7684hash\u503C\u662F\u5426\u76F8\u540C\u5373\u53EF\u3002</li><li>struct_pack\u662F\u4E00\u4E2A\u6A21\u677F\u5E93\uFF0C\u9F13\u52B1\u7F16\u8BD1\u5668\u79EF\u6781\u7684\u5185\u8054\u51FD\u6570\u3002</li><li>0\u6210\u672C\u62BD\u8C61\uFF0C\u4E0D\u4F1A\u4E3A\u7528\u4E0D\u5230\u7684\u7279\u6027\u4ED8\u51FA\u8FD0\u884C\u65F6\u4EE3\u4EF7\u3002</li><li>struct_pack\u7684\u5185\u5B58\u5E03\u5C40\u66F4\u63A5\u8FD1\u4E8EC++\u7ED3\u6784\u4F53\u539F\u59CB\u7684\u5185\u5B58\u5E03\u5C40\uFF0C\u51CF\u5C11\u4E86\u5E8F\u5217\u5316\u53CD\u5E8F\u5217\u5316\u7684\u5DE5\u4F5C\u91CF\u3002</li><li>\u7F16\u8BD1\u671F\u7C7B\u578B\u8BA1\u7B97\u5141\u8BB8struct_pack\u6839\u636E\u4E0D\u540C\u7684\u7C7B\u578B\u751F\u6210\u4E0D\u540C\u7684\u4EE3\u7801\u3002\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u6839\u636E\u4E0D\u540C\u7684\u7C7B\u578B\u7684\u7279\u70B9\u505A\u4F18\u5316\u3002\u4F8B\u5982\u5BF9\u4E8E\u8FDE\u7EED\u5BB9\u5668\u53EF\u4EE5\u76F4\u63A5memcpy\uFF0C\u5BF9\u4E8Estring_view\u53CD\u5E8F\u5217\u5316\u65F6\u53EF\u4EE5\u91C7\u7528\u96F6\u62F7\u8D1D\u4F18\u5316\u3002</li></ol><h2 id="\u9644\u5F55" tabindex="-1">\u9644\u5F55 <a class="header-anchor" href="#\u9644\u5F55" aria-hidden="true">#</a></h2><h3 id="\u5173\u4E8Estruct-pack\u7C7B\u578B\u7CFB\u7EDF" tabindex="-1">\u5173\u4E8Estruct_pack\u7C7B\u578B\u7CFB\u7EDF <a class="header-anchor" href="#\u5173\u4E8Estruct-pack\u7C7B\u578B\u7CFB\u7EDF" aria-hidden="true">#</a></h3><p><a href="https://alibaba.github.io/yalantinglibs/zh/guide/struct-pack-type-system.html" target="_blank" rel="noreferrer">struct_pack\u7684\u7C7B\u578B\u7CFB\u7EDF</a></p><h3 id="\u5173\u4E8Estruct-pack\u7684\u7F16\u7801\u4E0E\u5E03\u5C40" tabindex="-1">\u5173\u4E8Estruct_pack\u7684\u7F16\u7801\u4E0E\u5E03\u5C40 <a class="header-anchor" href="#\u5173\u4E8Estruct-pack\u7684\u7F16\u7801\u4E0E\u5E03\u5C40" aria-hidden="true">#</a></h3><p><a href="https://alibaba.github.io/yalantinglibs/zh/guide/struct-pack-layout.html" target="_blank" rel="noreferrer">struct_pack\u7684\u7F16\u7801\u4E0E\u5E03\u5C40</a></p><h3 id="\u6D4B\u8BD5\u4EE3\u7801" tabindex="-1">\u6D4B\u8BD5\u4EE3\u7801 <a class="header-anchor" href="#\u6D4B\u8BD5\u4EE3\u7801" aria-hidden="true">#</a></h3><p>\u8BF7\u89C1 <a href="https://github.com/alibaba/yalantinglibs/tree/main/src/struct_pack/benchmark" target="_blank" rel="noreferrer">benchmark.cpp</a></p>`,82),t=[e];function c(r,F,y,D,i,C){return n(),a("div",null,t)}const u=s(o,[["render",c]]);export{d as __pageData,u as default};
