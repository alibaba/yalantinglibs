# module-list
set(yLT_ALL_PROJECTS "struct_pack;struct_json;coro_rpc;util")
option(Build_ylt_all "Build all module" ON)
# separate
option(Build_ylt_struct_pack "Build struct_pack" ON)
option(Build_ylt_struct_json "Build struct_json" ON)
option(Build_ylt_coro_rpc "Build coro_rpc" ON)
option(Build_ylt_util "Build util" ON)

if(Build_ylt_all)
    list(APPEND yLT_ENABLE_PROJECTS ${yLT_ALL_PROJECTS})
else()
    foreach(proj ${yLT_ALL_PROJECTS})
        set(build_proj "Build_ylt_${proj}")
        if(${build_proj})
            list(APPEND yLT_ENABLE_PROJECTS ${proj})
        endif()
    endforeach()
endif()

message(STATUS "yLT_ENABLE_PROJECTS: ${yLT_ENABLE_PROJECTS}")
foreach(proj ${yLT_ENABLE_PROJECTS})
    set(location "${CMAKE_SOURCE_DIR}/src/${proj}")
    if(EXISTS ${location}/CMakeLists.txt)
        add_subdirectory(${location})
    endif()
    if(BUILD_EXAMPLES AND EXISTS ${location}/examples/CMakeLists.txt)
        message(STATUS "Build ${proj} examples")
        add_subdirectory(${location}/examples)
    endif()
    if(BUILD_UNIT_TESTS AND EXISTS ${location}/tests/CMakeLists.txt)
        message(STATUS "Build ${proj} unit tests")
        add_subdirectory(${location}/tests)
    endif()
    if(BUILD_BENCHMARK AND EXISTS ${location}/benchmark/CMakeLists.txt)
        if(proj STREQUAL "struct_pack")
            if(BUILD_SP_BENCHMARK)
                message(STATUS "Build ${proj} benchmark")
                add_subdirectory(${location}/benchmark)
            endif()
        else()
            message(STATUS "Build ${proj} benchmark")
            add_subdirectory(${location}/benchmark)
        endif()
    endif()
endforeach()
