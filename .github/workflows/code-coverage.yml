name: Upload CodeCov Report

on: [ push, pull_request ]

jobs:
  build:
  
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 2
    
    - name: Install newer Clang
      run: |
        sudo rm /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update
        wget https://apt.llvm.org/llvm.sh
        chmod +x ./llvm.sh
        sudo ./llvm.sh 17

    - name: Install RDMA and OpenUCX
      run: |
        sudo apt-get install -y libibverbs-dev librdmacm-dev ibverbs-utils libibumad3 ibverbs-providers rdma-core perftest iproute2
        curl -fsSL https://github.com/openucx/ucx/releases/download/v1.18.0/ucx-1.18.0.tar.gz | tar -xzvf - -C /tmp
        cd /tmp/ucx-1.18.0 && ./contrib/configure-release --prefix=/usr --with-rdmacm --with-verbs --without-go --without-java
        make -j$(nproc) && sudo make install
    
    - name: Setup SoftRoCE
      run: |
        # export IF_NAME=$(ip -o -4 route show to default | awk '{print $5}')
        # sudo modprobe -v rdma_rxe
        # sudo rdma link add rxe0 type rxe netdev $IF_NAME

    - name: Configure
      run: |
        cmake -B ${{github.workspace}}/build \
              -DCMAKE_BUILD_TYPE=${{matrix.mode}} -DBUILD_WITH_LIBCXX=OFF -DYLT_ENABLE_SSL=ON \
              -DUSE_CCACHE=${{env.ccache}} -DCMAKE_C_COMPILER=clang-17 -DCMAKE_CXX_COMPILER=clang++-17

    - name: Build with ${{ matrix.compiler }}
      run:  cmake --build ${{github.workspace}}/build --config Debug -- -j
      
    - name: Test
      working-directory: ${{github.workspace}}/build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest -C ${{ matrix.configuration }} -j 1 -V
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
